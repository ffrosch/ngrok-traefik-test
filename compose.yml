services:
  app:
    build:
      context: ./app
    volumes:
      - ./app:/app
      - ./.env:/app/.env
    labels:
      - "traefik.enable=true"

      # Middlewares
      - "traefik.http.middlewares.app-remove-prefix.stripprefix.prefixes=/app"
      - "traefik.http.middlewares.add-traefik-header.headers.customRequestHeaders.X-Handled-By-Traefik=true"

      # Router "app"
      # App available at https://<ngrok url>
      - "traefik.http.routers.app.entrypoints=web,websecure"
      - "traefik.http.routers.app.rule=Host(`${NGROK_DOMAIN}`)"
      - "traefik.http.routers.app.middlewares=add-traefik-header"

      # Router "app-local"
      # App available at http://app.localhost (only locally or if the host-header is rewritten with ngrok)
      - "traefik.http.routers.app-local.rule=Host(`app.localhost`)"
      - "traefik.http.routers.app-local.middlewares=add-traefik-header"

      # Router "app-chained-rule"
      # App available at https://<ngrok url>/app
      - "traefik.http.routers.app-chained-rule.rule=Host(`${NGROK_DOMAIN}`) && Path(`/app`)"
      - "traefik.http.routers.app-chained-rule.middlewares=app-remove-prefix"
      - "traefik.http.routers.app-chained-rule.middlewares=add-traefik-header"

      # Backend App Service
      # Optional, because the default exposed port of the Dockerfile is 80 and will automatically be used by traefik
      - "traefik.http.services.backend-app-service.loadbalancer.server.port=80"


  traefik:
    image: "traefik:v3.2.3"
    command:
      - "--api.insecure=true" # Enables Traefik's dashboard via port 8080: http://traefik.localhost:8080
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=WARN"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"

      # Middlewares
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"

      # Router for HTTP (port 80) - redirect to HTTPS (port 443)
      - "traefik.http.routers.traefik-http-router.entrypoints=web"
      - "traefik.http.routers.traefik-http-router.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-http-router.middlewares=https-redirect"

      # Router for HTTPS (port 443)
      - "traefik.http.routers.traefik-https-router.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-https-router.entrypoints=websecure"
      - "traefik.http.routers.traefik-https-router.tls=true"

      # Traefik dashboard service
      - "traefik.http.services.traefik-dashboard-service.loadbalancer.server.port=8080"  # Make it available at http://traefik.localhost

  ngrok:
    image: ngrok/ngrok:3.19.0-debian
    depends_on:
      - traefik
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    labels:
      - "traefik.enable=false"
    command:
      - "http"
      - "host.docker.internal:80"
      - "--domain=${NGROK_DOMAIN}"
    # necessary for ngrok to be able to pass the host header to traefik
    extra_hosts:
      - "host.docker.internal:host-gateway"
