services:
  app:
    build:
      context: ./app
    volumes:
      - ./app:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.entrypoints=web,websecure"
      - "traefik.http.services.app.loadbalancer.server.port=80"
      # App available at http://app.localhost
      - "traefik.http.routers.app-local.rule=Host(`app.localhost`)"
      # App available at https://<ngrok url>
      - "traefik.http.routers.app.rule=Host(`${NGROK_DOMAIN}`)"
      # App available at https://<ngrok url>/app
      - "traefik.http.routers.app-chained-rule.rule=Host(`${NGROK_DOMAIN}`) && Path(`/app`)"
      - "traefik.http.middlewares.app-remove-prefix.stripprefix.prefixes=/app"
      - "traefik.http.routers.app-chained-rule.middlewares=app-remove-prefix@docker"

  traefik:
    image: "traefik:latest"
    command:
      - "--api.insecure=true" # Enables Traefik's dashboard via port 8080: http://traefik.localhost:8080
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=WARN"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.entrypoints=web,websecure"

  ngrok:
    image: ngrok/ngrok:latest
    depends_on:
      - traefik
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    labels:
      - "traefik.enable=false"
    command:
      - "http"
      - "host.docker.internal:80"
      - "--domain=${NGROK_DOMAIN}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
